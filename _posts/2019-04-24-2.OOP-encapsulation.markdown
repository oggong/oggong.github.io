---
layout: post
title:  "0424-[자바]-OOP-2.encapsulation"
subtitle:   "0424-encapsulation"
categories: devlog
tags: Java

---
## encapsulation

<hr style="height: 1px; background: skyblue; "/>

#### Main

~~~

package b_encapsulation;

// 클래스 = 서로다른 자료형의 변수들 + 메소드들
/*
	캡슐화 = 권한관련부여
	1. 멤버변수 - private -- 다른 클래스에서 접근 허용 안됨


	2. 멤버 메소드 - public 모든 접근 허용
*/
public class Main {

	public static void main(String[] args) {

		Student s = new Student();

		s.setName("홍길동"); // s 에다가 홍길동을 기술하자 !
		s.setKor(100); // s.kor = 100;
		s.setEng(88);
		s.setMath(77);
		System.out.println("이름 :" + s.getName());
		System.out.println("총점 :" + s.calTotal());
//		s.total = 300;
		System.out.println("평균 : " + s.calAverage());
	}

}


~~~

<hr style="height: 1px; background: skyblue; "/>

#### Student

~~~

package b_encapsulation;

// 클래스 = 서로다른 자료형의 변수들 + 메소드들

public class Student {

	private String name;

	private int kor, eng, math;
	private int total;
	private double avg;

	public int calTotal() {
		total = kor + eng + math;
		return total;
	}

	public double calAverage() {
		avg = (double) total / 3;
		return avg;
	}
// ================================================================================setter
	public void setName(String name) {
		this.name = name;
	}

	public void setKor(int kor) {
		this.kor = kor;
	}

	public void setEng(int eng) {
		this.eng = eng;
	}

	public void setMath(int math) {
		this.math = math;
	}

	public String getName() {
		return name;
	}

}


~~~

<hr style="height: 1px; background: skyblue; "/>

#### CalculatorTest

~~~

package b_encapsulation;

import java.util.Scanner;

public class CalculatorTest {

	public static void main(String[] args) {

		CalculatorExpr cal = new CalculatorExpr(); // 객체 생성
		char cn = '\0';
		int a = 0, b = 0;
		int i = 0;

		do {

			Scanner sc = new Scanner(System.in);
			System.out.println("첫번째 숫자를 입력하세요.");
			a = sc.nextInt();
			System.out.println("두번째 숫자를 입력하세요.");
			b = sc.nextInt();

			cal.setNum1(a);
			cal.setNum2(b);
			if (i >= 1) {
				System.out.println(a + " " + b);
			}

			System.out.println("더하기 :" + cal.getAddition());
			System.out.println("빼기 :" + cal.getSubtraction());
			System.out.println("곱하기 :" + cal.getMultiplication());
			System.out.println("나누기 :" + cal.getDivision());

			System.out.println("계속 하려면 y/Y를 입력하세요!");
			System.out.println();
			cn = sc.next().charAt(0);
			i++;
		} while (cn == 'Y' || cn == 'y');

	}

}


~~~

<hr style="height: 1px; background: skyblue; "/>

#### CalculatorExpr

~~~

package b_encapsulation;

public class CalculatorExpr {

	private int num1;
	private int num2;

	public int addition;
	public int subtraction;
	public int multiplication;
	public double division;
//==========================================숫자 입 출력

	public int getNum1() {
		return num1;
	}

	public void setNum1(int num1) {
		this.num1 = num1;
	}

	public int getNum2() {
		return num2;
	}

	public void setNum2(int num2) {
		this.num2 = num2;
	}

//==========================================사칙 연산
	public int getAddition() {
		return num1 + num2;
	}

	public int getSubtraction() {
		return num1 - num2;
	}

	public int getMultiplication() {
		return num1 * num2;
	}

	public double getDivision() {
		return (double)num1 / num2;
	}

}


~~~

<hr style="height: 1px; background: skyblue; "/>
