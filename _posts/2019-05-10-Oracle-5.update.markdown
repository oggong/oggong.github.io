---
layout: post
title:  "0510-[Oracle]-5.update"
subtitle:   "0510-update"
categories: devlog
tags: Oracle

---
## update

<hr style="height: 1px; background: skyblue; "/>

#### UPDATE

~~~

-- 테이블 생성

CREATE TABLE reg_tab( text varchar2(20) );



-- 레코드 입력

INSERT INTO reg_tab VALUES('TIGER');

INSERT INTO reg_tab VALUES('TIGGER');

INSERT INTO reg_tab VALUES('elephant');

INSERT INTO reg_tab VALUES('tiger');

INSERT INTO reg_tab VALUES('tiger2');

INSERT INTO reg_tab VALUES('tiger3');

INSERT INTO reg_tab VALUES('doggy');

INSERT INTO reg_tab VALUES('5doggy');

INSERT INTO reg_tab VALUES('DOG');

INSERT INTO reg_tab VALUES('DOG2');

INSERT INTO reg_tab VALUES('개');

INSERT INTO reg_tab VALUES('cat');

INSERT INTO reg_tab VALUES('catty');

INSERT INTO reg_tab VALUES('9catty');

INSERT INTO reg_tab VALUES('catwoman');

INSERT INTO reg_tab VALUES('고양이');

INSERT INTO reg_tab VALUES('BAT');

INSERT INTO reg_tab VALUES('BATMAN');

INSERT INTO reg_tab VALUES('BATGIRL');

INSERT INTO reg_tab VALUES('0BATGIRL');

INSERT INTO reg_tab VALUES('박쥐');



-- 커밋

COMMIT;

DROP TABLE reg_tab;

-- 테이블 삭제
DROP TABLE gogek;
DROP TABLE sangpum;
DROP TABLE jumun;

-- gogek table 생성
    CREATE TABLE gogek(
    id      varchar(8),
    name    varchar2(10) not null,
    tel     varchar(13),

    CONSTRAINT pk_gogek_id PRIMARY KEY(id),
    CONSTRAINT uk_gogek_tel UNIQUE (tel)
    );

-- gogek table 생성 확인
    SELECT * FROM gogek;
    DESC gogek;

-- sangpum table 생성
    CREATE TABLE sangpum(
    no      varchar(6),
    title   varchar2(20) not null,
    detail  varchar2(38),
    count   number(10) not null,
    price   number(10),
    CONSTRAINT pk_sangpum_no PRIMARY KEY(no)
    );
-- gogek table 생성 확인
    SELECT * FROM sangpum;
    DESC sangpum;

-- jumun table 생성
    CREATE TABLE jumun(
    no          number(4),
    gogek       varchar(8),
    sangpum     varchar(6),
    count       number(10),
    jumunil     date,

    CONSTRAINT pk_jumun_no PRIMARY KEY(no),
    CONSTRAINT fk_jumun_gogek FOREIGN KEY (gogek) REFERENCES gogek(id),
    CONSTRAINT fk_jumun_sangpum FOREIGN KEY (sangpum) REFERENCES sangpum(no)
    );
-- jumun table 생성 확인
    SELECT * FROM jumun;
    DESC jumun;

-- gogek table 삽입

INSERT INTO gogek ( id, name, tel ) VALUES('babo1234','홍길동', '031-333-3333' ); -- 삽입 성공

INSERT INTO gogek ( id, name, tel ) VALUES('babo1111','김길동', '031-111-1111' ); -- 삽입 성공

INSERT INTO gogek ( id, name, tel ) VALUES('babo2222','홍길동', '031-222-2222' ); -- 성공

INSERT INTO gogek ( id, name, tel ) VALUES('babo9999','박길동', '031-333-3333' ); -- 번호 유니크 에러

INSERT INTO gogek ( id, name, tel ) VALUES('babo1234','맹길동', '031-999-9999' ); -- 무결성 제약 조건 (같은 아이디)

INSERT INTO gogek ( id, name, tel ) VALUES('babo12345','이길동', '031-333-1234' ); -- 열에 대한 값이 더 큼 (8자리로 정해져 있음)

INSERT INTO gogek ( id, name, tel ) VALUES('123','최길동', '031-999-9999' ); -- 삽입 성공

INSERT INTO gogek ( id, name ) VALUES('babo','봉길동' ); -- 삽입 성공

INSERT INTO gogek ( id, tel ) VALUES('babo1988','031-888-8888' ); -- not null 로 인해서 빈값은 불가 name 필수

-- 삽입된 것 확인
SELECT * FROM gogek;


-- sangpum table 삽입
INSERT INTO sangpum ( no, title, count,price, detail ) VALUES ('A00001','이쁜바지', 30, 1000, '싸고이뻐서 금방 다 팔릴 바지입니다' );
    --삽입 성공
INSERT INTO sangpum ( no, title, count,price, detail ) VALUES ('A00002','그냥바지', 20, 500, '그냥이뻐고 편안한 바지입니다' );
    --삽입 성공
INSERT INTO sangpum ( no, title, count )VALUES ('B00009','윗도리', 20 );
    --삽입 성공
INSERT INTO sangpum ( no, title, count,price ) VALUES ('Z0001','비싼코트', 3, 20000, '겁나 비싼코트입니다' );
    --값의 수가 많아서 에러
INSERT INTO sangpum VALUES ('Z00001','비싼코트2', 5, 20000, '겁나 비싼 코트입니다' );
    -- 넣는 순서 안 맞음
INSERT INTO sangpum VALUES ('Z00001','비싼코트3','겁나 비싼 코트입니다', 5, 20000);
    --삽입 성공

-- sangpum table 확인
    SELECT * FROM sangpum;



-- jumun table 삽입
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1000, 'babo1234', 'A00001', 1, '2016/09/09' );
    -- 성공
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1001, 'babo1233', 'Z00001', 1, '2016/09/09' );
    -- 에러: 고객 부모에 업슨 키 참조
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1002, 'Babo1234', 'A00002', 2, '2016/09/10' );
    -- 에러: id 고객 부모에 없는 키 참조, 대문자
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1003, 'babo1234', 'B00001', 1, '2016/09/11' );
    -- 에러: 상품 부모에 없는 키 참조
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1004, 'babo', 'Z00001', 1, '2016/10/11' );
    -- 성공
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1005, 'babo1234', 'B00009', 1, '2016/11/11' );
    -- 성공
INSERT INTO jumun(no, gogek, sangpum,count, jumunil) VALUES ( 1006, 'babo1234', 'B00009', 1, '2016/12/12' );
    -- 성공


-- jumun table 확인
    SELECT * FROM jumun;

/*
1.전화번호가 없는 고객은 누구인지 고객명을 검색하세요

*/
SELECT *
FROM gogek
WHERE tel is null;

/*
2.홍씨 성을 가진 고객들의 정보를 검색하세요
*/
SELECT*
FROM gogek
WHERE name like '홍%';

/*
3.babo2222 고객명을 박길동으로 변경하세요
*/
UPDATE gogek
SET name = '박길동'
WHERE id ='babo2222';

/*
4.아이디 123 고객의 아이디를 babo123 으로 변경하세요
*/
UPDATE gogek
SET id = 'babo123'
WHERE id = '123';

/*
5.봉길동씨의 전화번호 02-555-5555를 추가하세요
*/
UPDATE gogek
SET tel = '02-555-5555'
WHERE name = '봉길동';

/*
6.상품번호 B00009 에 가격 1200원 그리고 “겁나 쌕시한 옷입니다”라는 상품설명을 추가하세요
*/
UPDATE sangpum
SET price=1200, detail='겁나 섹시한 옷입니다'
WHERE no = 'B00009';

/*
7. 이쁜바지 상품이 10개가 팔렸습니다.
*/
SELECT * FROM sangpum;

UPDATE sangpum
SET count = count - 10
WHERE title = '이쁜바지';

/*
8.Z00001 상품이 3개가 더 입고 되었습니다.
*/
UPDATE sangpum
SET count = count + 3
WHERE no = 'Z00001';
/*
9.상품 가격이 1000원을 넘는 상품들을 검색하세요
*/
SELECT *
FROM sangpum
WHERE price> 1000;

/*
10.11월 이후에 주문한 상품 번호를 검색하세요
*/
SELECT * FROM jumun;


SELECT no
FROM jumun
WHERE jumunil > '16/11/01';

/*
11.babo 고객이 주문한 상품을 A00002로 변경하고 수량을 2개로 수정하세요
*/
UPDATE jumun
SET sangpum = 'A00002', count = 2
WHERE gogek = 'babo';

/*
12.babo1234 고객이 11월에 주문한 상품 번호을 검색하세요
*/

SELECT no
FROM jumun
WHERE (gogek = 'babo1234' AND jumunil BETWEEN '16/11/01' AND '16/11/30');

/*
13.B00009 상품을 주문한 고객 아이디를 검색하세요
*/
SELECT *
FROM jumun
WHERE sangpum ='B00009';


~~~

<hr style="height: 1px; background: skyblue"/>
