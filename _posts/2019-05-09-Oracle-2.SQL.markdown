---
layout: post
title:  "0509-[Oracle]-2.Sql"
subtitle:   "0509-sql"
categories: devlog
tags: Oracle

---
## SQL

<hr style="height: 1px; background: skyblue; "/>

#### SQL

~~~

-- emp(사원테이블)에 8000사번에 이름은 본인이름으로 월급 10000 데이타 입력
-- INSERT INTO table_name(columns) VALUES (values);

INSERT INTO emp(empno, ename, sal) VALUES (8000, '홍길동', 10000); -- 입력
INSERT INTO emp(empno, ename, sal) VALUES (7788, '홍길자', 9000); -- 에러 : 무결성제약조건

INSERT INTO emp(empno, ename, sal, deptno) VALUES (8001, '홍길자', 9000, 20); -- 입력
INSERT INTO emp(empno, ename, sal, deptno) VALUES (8002, '홍길숙', 9000, 60); -- 에러 : 무결성제약조건

commit;
rollback;

-- 구조확인
DESC emp;

-- 내용확인
SELECT * FROM emp;

/*
    테이블명 : info
    hakbun  char(4)
    name    varchar2(10)
    jumin   char(14)
    gender  varchar2(10)
    age     number(3)
 */
CREATE TABLE info(
    hakbun  char(4),
    name    varchar2(10),
    jumin   char(14),
    gender  varchar2(10),
    age     number(3)
);
-- 구조확인
DESC info

/* 데이타 입력
    ' 1001 학번의 홍길동 입력
    ' 1002 학번의 김길동 입력
    ' 1002 학번의 맹길동 입력
    ' 주민번호가 801212-1234567인 홍길동 학생
    ' 26세 남자 입력
 */
INSERT INTO info(hakbun, name) VALUES ('1001', '홍길동');
INSERT INTO info(hakbun, name) VALUES ('1002', '김길동');
INSERT INTO info(hakbun, name) VALUES ('1002', '맹길동');
INSERT INTO info(jumin, name) VALUES ('801212-1234567', '홍길동');
INSERT INTO info(age, gender) VALUES (26, '남자');

-- 내용확인
SELECT * FROM info;
-- 데이타 삭제
DELETE FROM info;

-- 제약조건(기본키)
/*
    ALTER  TABLE   table_name
    ADD  CONSTRAINT  pk_name  PRIMARY  KEY ( column_name );
 */
 -- 제약조건(기본키)
ALTER TABLE info
-- 학번을 PRIMARY KEY(첫번째 방법) 한 후 다시
ADD CONSTRAINT pk_info_hakbun PRIMARY KEY (hakbun);
INSERT INTO info(hakbun, name) VALUES ('1001', '홍길동');
INSERT INTO info(hakbun, name) VALUES ('1002', '김길동');
INSERT INTO info(hakbun, name) VALUES ('1002', '맹길동'); -- 에러
INSERT INTO info(jumin, name) VALUES ('801212-1234567', '홍길동'); -- 에러
INSERT INTO info(age, gender) VALUES (26, '남자'); -- 에러

-- 제약조건 확인
SELECT constraint_name, constraint_type FROM user_constraints;

-- 데이타테이블 삭제
DROP TABLE info;
/* info 테이블에 PK 부여
    테이블 레벨 제약조건 방식
    CREATE TABEL    table_name (
    column_name     data_type,
    CONSTRAINT      fk_name FOREIGN  KEY (column_name )
    REFERENCES      ef_table_name ( ref_column_name )
    );    
 */
CREATE TABLE info(
    hakbun  char(4),
    name    varchar2(10),
    jumin   char(14),
    gender  varchar2(10),
    age     number(3),
    -- PRIMARY KEY(두번째 방법)
    CONSTRAINT pk_info_hakbun PRIMARY KEY (hakbun)
);
INSERT INTO info(hakbun, name) VALUES ('1001', '홍길동');
INSERT INTO info(hakbun, name) VALUES ('1002', '김길동');
INSERT INTO info(hakbun, name) VALUES ('1002', '맹길동'); -- 에러
INSERT INTO info(jumin, name) VALUES ('801212-1234567', '홍길동2'); -- 에러
INSERT INTO info(hakbun, age, gender) VALUES ('1111', 26, '남자'); -- 에러

DELETE FROM info;

-- PRIMARY KEY(세번째 방법) : NOT NULL
ALTER TABLE info MODIFY (name varchar2(10) NOT NULL);

DESC info;

-- [UNIQUE]
ALTER TABLE info ADD
CONSTRAINT uq_info_jumin UNIQUE (jumin);

SELECT * FROM info;

-- 주민번호를 UNIQUE 해줬기 때문에 주민번호가 같으면 에러
INSERT INTO info(hakbun, name, jumin) VALUES ('1003', '맹길동', '990101-1234567');
INSERT INTO info(hakbun, name, jumin) VALUES ('1004', '박길동', '990101-1234567'); -- UQ 에러

INSERT INTO info(name, jumin) VALUES ('최길동', '990101-1234567'); -- PK 에러

-- PK는 NULL값이 허용되지않지만 UNIQUE는 NULL값이 허용
INSERT INTO info(hakbun, name) VALUES ('1005', '문길동');

DESC info;

-- [CHECK]
-- 남자 : 남자/남정네/남성/남/m/M/male/Male/man/Man/
ALTER TABLE info ADD
CONSTRAINT ck_info_gender CHECK (gender IN ('남성', '여성'));

INSERT INTO info(hakbun, name, gender) VALUES ('1006', '배길동', '남성');
INSERT INTO info(hakbun, name, gender) VALUES ('1007', '전길동', '여성');
INSERT INTO info(hakbun, name, gender) VALUES ('1008', '안길동', '남자'); -- CK 에러

-- [DEFAULT] : 제약조건은 아니지만 제약조건과 같이 많이 사용
ALTER TABLE info MODIFY (gender char(4) DEFAULT '남성');
INSERT INTO info(hakbun, name) VALUES ('1009', '강길동'); -- DEFAULT는 기본값을 지정

SELECT * FROM info;

-- [FOREIGN KEY]
DROP TABLE info;

-- 부서 deptno 자료형을 보기위해
DESC emp;

CREATE TABLE info(
    hakbun  char(4),
    name    varchar2(10) NOT NULL,
    jumin   char(14),
    gender  varchar2(10) DEFAULT '남성',
    age     number(3),
    deptno  number(2),
    CONSTRAINT pk_info_hakbun PRIMARY KEY (hakbun),
    CONSTRAINT uq_info_jumin UNIQUE (jumin),
    CONSTRAINT ck_info_gender CHECK (gender IN ('남성', '여성')),
    CONSTRAINT fk_info_deptno FOREIGN KEY (deptno) REFERENCES dept(deptno)
);

INSERT INTO info(hakbun, name, gender, deptno) VALUES ('9000', '송혜교', '여성', 10);
INSERT INTO info(hakbun, name, deptno) VALUES ('9001', '전지현', 50); -- 에러 : 부서에 50이 없음
INSERT INTO info(hakbun, name, deptno) VALUES ('9001', '전지현', 10);

DESC info;
SELECT * FROM info;

-- [연습문제]
/* 1. sawon 테이블을 생성하세요.
    sabun은 6자리 숫자
    sawon_name은최대 한글 5자리
    ubmu는최대 한글 10자리
    weolgub는정수형 8자리와 소수점 2자리
    buseo는숫자 3자리
 */
CREATE TABLE sawon(
    sabun       number(6),
    sawon_name  varchar2(10),
    ubmu        varchar2(20),
    weolgub     number(10, 2),
    buseo       number(3)
);
DROP TABLE sawon;
DROP TABLE buseo;
DESC sawon;
SELECT * FROM sawon;

-- 2. 위의 테이블에서 sabun을 기본키로 설정
ALTER TABLE sawon ADD CONSTRAINT  pk_sawon_sabun  PRIMARY  KEY (sabun);

-- 3. 최대 한글 10자리의 jiyeok 컬럼을 추가하되 NULL 값이 입력되지 않도록 지정
ALTER TABLE sawon ADD(jiyeok varchar2(20) NOT NULL);

-- 4. weolgub 컬럼은 정수형7자리로 변경
ALTER TABLE sawon MODIFY(weolgub number(7));

-- 5. ubmu컬럼은 ‘개발’, ‘유지보수’, ‘관리’ 만데이터 값으로 입력되도록 지정
ALTER TABLE sawon ADD CONSTRAINT ck_sawon_ubmu CHECK (ubmu IN ('개발', '유지보수', '관리'));

-- 6. ubmu컬럼에 데이터가 입력이 안될 경우 디폴드값으로 ‘개발’을 설정
ALTER TABLE sawon MODIFY (ubmu DEFAULT '개발');

/* 7. buseo 테이블을 생성하세요
    buseo_no는숫자 3자로 이루어진 번호로 기본키
    buseo_name은최대 한글 10자리
 */
CREATE TABLE buseo(
    buseo_no    number(3),
    buseo_name  varchar2(20),
    CONSTRAINT  pk_buseo_buseo_no  PRIMARY  KEY (buseo_no)
);

DESC buseo;
DESC sawon;
SELECT * FROM buseo;

-- 8. sawon 테이블의 buseo컬럼을 buseo 테이블의 buseo_no를참조하는 외래키로 설정
ALTER TABLE sawon ADD CONSTRAINT fk_sawon_buseo FOREIGN KEY (buseo) REFERENCES buseo(buseo_no);

-- 9. useo 테이블에 데이터 입력
INSERT INTO buseo(buseo_no, buseo_name) VALUES (101, '소프트웨어유지보수부');
INSERT INTO buseo(buseo_no, buseo_name) VALUES (202, '관리부');
INSERT INTO buseo(buseo_no, buseo_name) VALUES (303, '인적자원부');

-- 10. sawon 테이블에 데이터 입력 (입력이 안될 경우도 있음)
INSERT INTO sawon(sabun, sawon_name, weolgub, buseo, jiyeok) VALUES (8001, '홍길동이군', 100000, 101, '부산');
INSERT INTO sawon(sabun, sawon_name, ubmu, weolgub, buseo, jiyeok) VALUES (8002, '홍길자', '사무', 200000, 202, '인천'); -- CK 에러
INSERT INTO sawon(sabun, sawon_name, ubmu, buseo, jiyeok) VALUES (8003, '홍길순', '개발', 111, '대천'); -- FK 에러
INSERT INTO sawon(sabun, sawon_name, weolgub, jiyeok) VALUES (8004, '홍길석', 12345678, '서울'); -- 에러 : 자리수
INSERT INTO sawon(sabun, sawon_name, ubmu, buseo, jiyeok) VALUES (8005, '홍길철', '유지보수', 303, '판교');

-- 11. sawon 테이블에서 jiyeok 컬럼을 제거
ALTER TABLE sawon DROP (jiyeok);

-- 12. buseo 테이블에서 buseo 명이 ‘인적자원부’인 행을 삭제
DELETE FROM buseo WHERE buseo_name = '인적자원부'; -- 에러 : 부서테이블 참조 중

-- 13. sawon 테이블의 모든 내용을 삭제하고 저장공간을 해제
TRUNCATE TABLE sawon; -- 구조는 남겨두고 내용을 삭제한다.

-- 14. 1~8 단계까지를 하나의CREATE 문으로 작성
CREATE TABLE buseo(
    buseo_no    number(3),
    buseo_name  varchar2(20),
    CONSTRAINT  pk_buseo_buseo_no  PRIMARY  KEY (buseo_no)
);  
CREATE TABLE sawon(
    sabun   char(6),
    sawon_name  varchar2(10),
    ubmu    varchar2(20) DEFAULT '개발',
    weolgub number(7),
    buseo   number(3),
    jiyeok varchar2(10) NOT NULL,
    CONSTRAINT pk_sawon_sabun  PRIMARY  KEY (sabun),
    CONSTRAINT ck_sawon_ubmu CHECK (ubmu IN ('개발', '유지보수', '관리')),
    CONSTRAINT fk_sawon_buseo FOREIGN KEY (buseo) REFERENCES buseo(buseo_no)
);


~~~

<hr style="height: 1px; background: skyblue"/>
