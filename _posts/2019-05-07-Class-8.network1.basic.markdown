---
layout: post
title:  "0507-[자바]-Class-8.network.basic"
subtitle:   "0507-network.basic"
categories: devlog
tags: Java

---
## network.basic

<hr style="height: 1px; background: skyblue; "/>

#### SimpleClient

~~~

package network1.basic;

import java.io.*;
import java.net.*;
import java.util.*;

public class SimpleClient {

	public final static int PORT = 5001;
	public final static String HOST = "localhost";

	public static void main(String args[]) {

		Socket client = null;
		DataInputStream in = null;
		DataOutputStream out = null;

		// 콘솔 입력을 받기 위해
		Scanner stdin = new Scanner(System.in);

		try {

			// 1. 서버에 연결하기 위해 소켓 생성
			client = new Socket(HOST, PORT); // 내가 접속할 호스트 와 서버 번호를 지정

			// 2. 소켓의 입출력 스트림 얻기
			in = new DataInputStream(client.getInputStream());

			out = new DataOutputStream(client.getOutputStream());

			// 3. 키보드 입력 받아 서버에 전송
			System.out.println("인사말 입력->");
			String greeting = stdin.nextLine();
			out.writeUTF(greeting);

			// 4. 서버로부터 응답을 받음
			String result = in.readUTF();
			System.out.println("짝궁의 메세지 :"+result);
			// 5. 입출력 스트림의 닫음
			in.close();
			out.close();
			client.close();

		} catch (Exception ex) {
			System.out.println("Error writing.." + ex);
		}
	}
}

~~~

<hr style="height: 1px; background: skyblue"/>

#### SimpleServer

~~~

package network1.basic;

import java.io.*;
import java.net.*;

public class SimpleServer {

	public final static int PORT = 5001; // PortNumer : 1024 ~ 포트번호 임의 지정 하나 해줘야 함!

	public static void main(String args[]) {

		ServerSocket server = null;
		DataInputStream in = null;
		DataOutputStream out = null;
		Socket clientSocket = null;

		try {
			// 1. 서버 소켓 생성
			server = new ServerSocket(PORT);
			System.out.println("SimpleServer started..");

			// 2. 클라이언트 접속시 소켓 생성
			// 3. 소켓의 입출력 스트림 얻기
			clientSocket = server.accept(); // Client 들어올때 까지 대기하다가 client가 접속하면 대기 상태 해제 하는 소켓
			in = new DataInputStream(clientSocket.getInputStream());
			out = new DataOutputStream(clientSocket.getOutputStream());

			// 4. 데이터 전송
			String line = in.readUTF();
			System.out.println("we received : " + line);
			if (line.compareTo("안녕") == 0) {
				out.writeUTF("힘내.....자");
			} else {
				out.writeUTF("인사말이 아닙니다.");
			}

			// 5. 소켓닫기
			in.close();
			out.close();
			clientSocket.close();
		} catch (Exception ex) {
			System.out.println(ex.getMessage());
		}
	}
}

~~~

<hr style="height: 1px; background: skyblue"/>
