---
layout: post
title:  "2020-03-30-[Vue.js]-Vue.js 4.Vue-instance(1)"
subtitle:   "2020-03-30 Vue.js Vue instance "
categories: devlog
tags: vue

---


## Vue.js Vue instance (1) <br/>


#### Do it Vue.js 입문을 보고 공부한 내용을 올리고 있습니다.



<br/>

<hr style="height: 1px; background: skyblue; "/>

<br/>


#### 뷰 인스턴스
  - 뷰로 화면을 개발하기 위해 필수적으로 생성해야 하는 기본 단위
<br/>
#### 뷰 인스턴스 생성

```

new Vue({

  })

```

<br/>

#### 뷰 인스턴스 생성자

- new Vue()로 인스턴스를 생성할 때 Vue를 생성자라고 한다.
<br/>
  <p> Vue 생성자는 뷰 라이브러리를 로딩하고 나면 접근 가능 <p>
  <p> 뷰로 개발할때 필요한 기능들을 생성자에 미리 정의해 놓고 사용자가 그 기능을 재정의하여 <br/>
  편리하게 사용하도록 하기 위해서입니다. </p> <br/>

  ><p> - 생성자 ? <br/>
      생성자는 객체를 새로 생성할때 자주 사용하는 옵션과 기능들을 미리 특정 객체에 저장해 놓고 <br/>
      새로 객체를 생성할 때 기존에 포함된 기능과 더불어 기존 기능을 쉽게 확장하여 사용하는 기법</p>

<br/>

- 뷰 인스턴스 옵션 속성
  - 뷰 인스턴스 옵션 속성은 인스턴스를 생성할 때 재정의할 data,el,template 등의 속성을 의미

```

<div id="app">      <--------------new Vue({
      {{message}}                     el: '#app',
</div>                            });

```

<br/>

- el 속성 역시 미리 정의되어 있으며 뷰로 만든 화면이 그려지는 시작점을 의미
- 뷰 인스턴스로 화면을 렌더링할 때 화면이 그려질 위치의 돔 요소를 지정해 주어야 한다.

<br/>

- <p> # app 값은 화면의 돔 요소 중 app이라는 아이디를 가진 요소를 의미 </p>
- <p> # 선택자는 CSS 선택자 규칙과 같다 </p>
<br/>

- template
  - 화면에 표시할 HTML, CSS 등 의 마크업 요소를 정의하는 속성
  - 뷰의 데이터 및 기타 속성들도 함께 화면에 그릴 수 있음
<br/>
- methods
  - 화면 로직 제어와 관계된 메서드를 정의하는 속성
  - 마우스 클릭 이벤트 처리와 같이 화면의 전반적인 이벤트와 화면 동작과 관련된 로직을 추가
<br/>
- created
  - 뷰 인스턴스가 생성되자마자 실행할 로직을 정의할 수 있는 속성
  - 뷰 인스턴스 라이프 사이클 부분에서 추가로 설명
<br/>

#### 뷰 인스턴스의 유효 범위

- 인스턴스의 유효 범위
  - 뷰 인스턴스를 생성하면 HTML의 특정 범위 안에서만 옵션 속성들이 적용되어 나타남 <br/>
  이를 인스턴스의 유효 범위라고 한다.
